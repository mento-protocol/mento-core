/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IBrokerAdmin, IBrokerAdminInterface } from "../IBrokerAdmin";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "exchangeProvider",
        type: "address",
      },
    ],
    name: "ExchangeProviderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "exchangeProvider",
        type: "address",
      },
    ],
    name: "ExchangeProviderRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "prevAddress",
        type: "address",
      },
    ],
    name: "ReserveSet",
    type: "event",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "exchangeProvider",
        type: "address",
      },
    ],
    name: "addExchangeProvider",
    outputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "exchangeProvider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "removeExchangeProvider",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "reserve",
        type: "address",
      },
    ],
    name: "setReserve",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IBrokerAdmin__factory {
  static readonly abi = _abi;
  static createInterface(): IBrokerAdminInterface {
    return new utils.Interface(_abi) as IBrokerAdminInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBrokerAdmin {
    return new Contract(address, _abi, signerOrProvider) as IBrokerAdmin;
  }
}
